import { HttpClient } from '@angular/common/http';import { Injectable } from '@angular/core';import { Observable } from 'rxjs';import { Image } from '../models/image.model';@Injectable({ providedIn: "root" })export class DashboardService {  private static BASE_URL = "https://picsum.photos";  constructor(    private http: HttpClient  ) {}  public searchGallery(pageNumber = 1): Observable<Image[]> {    return this.http.get<Image[]>(`${DashboardService.BASE_URL}/v2/list/?page=${pageNumber}&limit=20`);  }  public searchImage(id: string): Observable<Image> {    return this.http.get<Image>(`${DashboardService.BASE_URL}/id/${id}/info`);  }  public downloadImage(url: string): Observable<any> {    return this.http.get(      url,      { responseType: "blob" as "json" }    );  }  /**   * @param blob - Blob object received from the server   * @param name - name of the file to be saved (optional, predefined)   *   * Automatically download the file to the user's device   */  public downloadBlob(blob, name) {    // @ts-ignore    if (window.navigator && window.navigator.msSaveOrOpenBlob) {      // @ts-ignore      return window.navigator.msSaveOrOpenBlob(blob);    }    // For other browsers:    // Create a link pointing to the ObjectURL containing the blob.    const data = window.URL.createObjectURL(blob);    const link = document.createElement("a");    link.href = data;    link.download = name;    // this is necessary as link.click() does not work on the latest firefox    link.dispatchEvent(      new MouseEvent("click", {        bubbles: true,        cancelable: true,        view: window      })    );  };}